<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    This is a mock project that doesn't build the app bundle but only downloads a pre-prepared one from a storage account.
  -->

  <PropertyGroup>
    <DirectoryBuildPropsPath>..\..\..\Directory.Build.props</DirectoryBuildPropsPath>
    <DirectoryBuildTargetsPath>..\..\..\Directory.Build.targets</DirectoryBuildTargetsPath>
  </PropertyGroup>

  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" />
  <Import Project="../Storage.props"/>

  <PropertyGroup>
    <AppStorageUrl>$(AssetsBaseUri)/ios/test-app/$(TestTarget)</AppStorageUrl>
    <XHarnessTestAppBundleUrl>$(AppStorageUrl)/$(TestAppBundleName).zip</XHarnessTestAppBundleUrl>
    <TestAppDestinationDir>$(ArtifactsTmpDir)test-app\$(TestTarget)</TestAppDestinationDir>
  </PropertyGroup>

  <Target Name="Build" Returns="@(XHarnessAppFoldersToTest)">
    <DownloadFile SourceUrl="$(XHarnessTestAppBundleUrl)" DestinationFolder="$(TestAppDestinationDir)" SkipUnchangedFiles="True" Retries="5">
      <Output TaskParameter="DownloadedFile" ItemName="ZippedAppBundle" />
    </DownloadFile>

    <Message Text="Downloaded $(TestAppBundleName) from @(ZippedAppBundle). Extracting..." Importance="High" />
    <Exec Command="tar -xzf @(ZippedAppBundle) -C $(TestAppDestinationDir)" />
    <Message Text="Extracted to $(TestAppDestinationDir)" Importance="High" />

    <ItemGroup>
      <XHarnessAppFoldersToTest Include="$(TestTarget)-$(TestAppBundleName)">
        <AppBundlePath>$(TestAppDestinationDir)\$(TestAppBundleName)</AppBundlePath>
        <TestTarget>$(TestTarget)</TestTarget>
        <WorkItemTimeout>00:20:00</WorkItemTimeout>
        <TestTimeout>00:07:00</TestTimeout>
        <LaunchTimeout>00:03:30</LaunchTimeout>
        <IncludesTestRunner>$(IncludesTestRunner)</IncludesTestRunner>
        <ExpectedExitCode>$(ExpectedExitCode)</ExpectedExitCode>
      </XHarnessAppFoldersToTest>
    </ItemGroup>
  </Target>

</Project>
